/*********************************  REXX  *************************************/
/*                                                                            */
/* ------------------------------- README ----------------------------------- */
/*                                                                            */
/* ПРОГРАММА ЗАПУСКАЕТСЯ С ПОМОЩЬЮ DUAGRJOB                                   */
/* ОПИСАНИЕ РАБОТЫ ПРОГРАММЫ СМ. DUAGRJOB                                     */
/*                                                                            */
/******************************************************************************/
/*                         ОСНОВНАЯ ПРОГРАММА (MAIN)                          */
/******************************************************************************/
 RETCODE = 0

/* --- Глобально обьявляем массив заблокированных пользователей ------------- */
   array_userName.0 = ""
   sortArray.0 = ""
/* -------------------------------------------------------------------------- */
/* В ЦИКЛЕ ПРОХОДИМ ПО СТЕМУ LINE. И СОБИРАЕМ СОРТИРОВАННЫЙ СПИСОК С
   ПРЕДЫДУЩЕГО ШАГА ПРОГРАММЫ В МАССИВ sortArray                              */
/* -------------------------------------------------------------------------- */
   "EXECIO * DISKR SORT ( STEM LINE. FINIS"
   DO S = 1 TO LINE.0
     sortArray.S = LINE.S
   END
   DROP LINE.
/* -------------------------------------------------------------------------- */
/* В ЦИКЛЕ ПРОХОДИМ ПО СТЕМУ LINE. И СОБИРАЕМ ИМЕНА ЗАБЛОКИРОВАННЫХ
   ПОЛЬЗОВАТЕЛЕЙ В МАССИВ array_userName                                      */
/* -------------------------------------------------------------------------- */
   "EXECIO * DISKR UIR ( STEM LINE. FINIS"
   indexLINE = 11
   DO U = 1 TO LINE.0
     if (pos(";",LINE.indexLINE)>0) then do
  /*   if substr(LINE.indexLINE,1,2)=';' then do */
         array_userName.U = substr(LINE.indexLINE,3,8)
         indexLINE = indexLINE + 1
  /*   end */
     end
   END
/* --- Вызываем функции формирования наборов данных ------------------------- */
   call LINKER_1
   call LINKER_2

 EXIT RETCODE
/******************************************************************************/
/*                               КОМПОНОВЩИК №1                               */
/******************************************************************************/
/* ФОРМИРОВАНИЕ КОМАНД НА УДАЛЕНИЕ ПОЛЬЗОВАТЕЛЕЙ ИЗ GENERAL RESOURCE И ЗАПИСЬ
   В НАБОР ДАННЫХ DUAGR.OUT1                                                  */
/* -------------------------------------------------------------------------- */
 LINKER_1:
/* --- Объявление счетчиков ------------------------------------------------- */
   Zx=1
   Xx=1
/* --- Запуск цикла формирование строк на удаление -------------------------- */
   DO Kx=1 TO S
/* --- Проверка наличия имени заблокированного пользователя в строке -------- */
     if (pos(array_userName.Xx,sortArray.Kx)>0) then do
/* --- Поиск позиции первого вхождения пробела в записи с 30 символа -------- */
       pos = pos(" ",sortArray.Kx,30)
/* --- Присвоение переменной имени профиля ---------------------------------- */
       profile = substr(sortArray.Kx,30,pos-30)
/* --- Присвоение переменной имени активного класса ------------------------- */
       class = substr(sortArray.Kx,2,8)
/* --- Формироание строки с коммандой на удаление --------------------------- */
       arrayComm_delGR.Zx="PERMIT "profile" CLASS("class")",
                         "ID("array_userName.Xx") DELETE"
/* --- Увеличение счетчика результирующей строки ---------------------------- */
       Zx=Zx+1
     end
     else do
/* --- Увеличение счетчика заблокированных пользователей -------------------- */
       Xx=Xx+1
     end
   END
   if (Zx=1) then arrayComm_delGR.Zx="Данных заблокированных пользователей",
           "нет в списках доступа к профилям активных классов"
/* --- Запись сформированного стема в набор данных -------------------------- */
   "EXECIO * DISKW OUTDD1 (STEM arrayComm_delGR."
   "EXECIO * DISKW OUTDD1 (FINIS"

 RETURN
/******************************************************************************/
/*                               КОМПОНОВЩИК №2                               */
/******************************************************************************/
/* ФОРМИРОВАНИЕ КОМАНД НА УДАЛЕНИЕ ПОЛЬЗОВАТЕЛЕЙ ИЗ RACF И ЗАПИСЬ
   В НАБОР ДАННЫХ DUAGR.OUT2                                                  */
/* -------------------------------------------------------------------------- */
 LINKER_2:
/* --- Запуск цикла формирования строки с командой на удаление -------------- */
   DO A = 1 TO U-14
     arrayComm_delUser.A="DELUSER "array_userName.A
   END
/* --- Запись сформированного стема в набор данных -------------------------- */
   "EXECIO * DISKW OUTDD2 (STEM arrayComm_delUser."
   "EXECIO * DISKW OUTDD2 (FINIS"

 RETURN
